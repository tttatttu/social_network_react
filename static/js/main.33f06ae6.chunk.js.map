{"version":3,"sources":["api/api.js","redux/dialogsReducer.js","img/avatar.png","img/loader.gif","img/header.png","components/Header/Nav/Menu/Menu.module.css","components/Header/Nav/Nav.module.css","components/Profile/Articles/ArticlesTitle/ArticlesTitle.module.css","img/mask_1.jpg","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.js","utils/objectHelpers.js","redux/usersReducer.js","components/Profile/Articles/ArticleButton/ArticleButton.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/usersSelectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/authReducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/appReducer.js","redux/sidebarReducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/Users/users.module.css","components/common/Preloader/Preloader.js","components/Profile/Articles/Article/Article.module.css","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/Paginator/paginator.module.css","components/Profile/Articles/Articles.module.css","redux/profileReducer.js","components/Header/Header.module.css"],"names":["instans","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","FormControl","input","meta","touched","error","children","hasError","className","classes","formControl","Textarea","props","restProps","Input","createField","placeholder","validate","component","text","updateObjectInArray","items","itemId","objPropName","newObgProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowingProgress","requestUsers","page","dispatch","a","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","bind","usersReducer","followed","filter","Boolean","window","location","hostname","match","Navbar","nav","item","to","activeClassName","active","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setportionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","userProfile","src","photos","small","userPhoto","button","disabled","some","userInfo","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","Header","isAuth","header","styles","backgroundImage","headerImg","loginBlock","SET_USER_DATA","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","formSummaryError","length","stopSubmit","_error","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","preloader","value","maxLengthCreator","maxLength","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","file","getState","Promise","reject","newPost","postId"],"mappings":"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","file":"static/js/main.33f06ae6.chunk.js","sourcesContent":["import * as axios from \"axios\";\nimport { follow } from \"../redux/usersReducer\";\nimport { savePhoto } from '../redux/profileReducer';\n\nconst instans = axios.create({\n  withCredentials: true,\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  headers: {\n    \"API-KEY\": \"7606fa20-b64f-4645-8b31-dab104abf2b2\",\n  },\n});\n\nexport const usersAPI = {\n  getUsers(currentPage, pageSize) {\n    return instans\n      .get(`users?page=${currentPage}&count=${pageSize}`)\n      .then((response) => {\n        return response.data;\n      });\n  },\n  follow(userId) {\n    return instans.post(\n      `follow/${userId}`,\n      {});\n  },\n  unfollow(userId) {\n    return instans.delete(`follow/${userId}`)},\n  getProfile(userId) {\n    console.warn('Obsolete method. Please profileAPI object')\n      return profileAPI.getProfile(userId);\n    }\n}\n\nexport const profileAPI = {\n  getProfile(userId) {\n    return instans.get(`profile/` + userId);\n  },\n  getStatus(userId) {\n    return instans.get(`profile/status/` + userId);\n  },\n  updateStatus(status) {\n    return instans.put(`profile/status/`, {status: status});\n  },\n  savePhoto(photoFile) {\n\n    const formData = new FormData();\n    formData.append(\"image\", photoFile);\n\n    return instans.put(`profile/photo/`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  saveProfile(profile) {\n\n    return instans.put(`profile`, profile);\n  }\n}\n\nexport const authAPI = {\n  me() {\n    return instans.get(`auth/me`);\n  },\n  login(email, password, rememberMe = false, captcha = null) {\n    return instans.post(`auth/login`, { email, password, rememberMe, captcha });\n  },\n  logout() {\n    return instans.delete(`auth/login`);\n  }\n}\n\nexport const securityAPI = {\n  getCaptchaUrl() {\n    return instans.get(`security/get-captcha-url`);\n  }\n}\n","const SEND_MESSAGE = 'SEND-MESSAGE';\n\nlet initialState = {\n  dialogs: [\n    {id:1, name: 'Sveta'},\n    {id:2, name: 'Sasha'},\n    {id:3, name: 'Anna'},\n    {id:4, name: 'Tomy'}\n  ],\n  messages: [\n    {id:1, message: 'Hi'},\n    {id:2, message: 'How are you?'},\n    {id:3, message: 'Yo'},\n    {id:4, message: 'Yo'}\n  ]\n}\n\nconst dialogsReducer = (state = initialState, action)  => {\n  switch(action.type) {\n    case SEND_MESSAGE: {\n      let body = action.newMessageBody;\n      return { \n        ...state,\n        messages: [ ...state.messages, {id: 5, message: body} ]\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\n\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/avatar.c4a736c1.png\";","module.exports = __webpack_public_path__ + \"static/media/loader.12a1921a.gif\";","module.exports = __webpack_public_path__ + \"static/media/header.5695df73.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Menu_nav__1-SpF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3KZLE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ArticlesTitle_title__1Jx_O\"};","module.exports = __webpack_public_path__ + \"static/media/mask_1.4a003246.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\"};","import React from \"react\";\nimport classes from \"./FormsControls.module.css\";\nimport { Field } from 'redux-form';\n\nconst FormControl = ({ input, meta: {touched, error}, children, ...props }) => {\n  const hasError = touched && error;\n\n  return (\n    <div\n      className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}\n    >\n      <div>{children}</div>\n      <div>{hasError && <span>{error}</span>}</div>\n    </div>\n  );\n};\n\nexport const Textarea = (props) => {\n  const { input, meta, children, ...restProps } = props;\n\n  return (\n    <FormControl {...props}>\n      <textarea {...input} {...restProps} />{\" \"}\n    </FormControl>\n  );\n};\n\nexport const Input = (props) => {\n  const { input, meta, children, ...restProps } = props;\n\n  return (\n    <FormControl {...props}>\n      <input {...input} {...restProps} />\n    </FormControl>\n  );\n};\n\nexport const createField = (placeholder, name, validate, component, props ={}, text=\"\") => (\n  <div>\n    <Field\n      placeholder={placeholder}\n      name={name}\n      validate={validate}\n      component={component}\n      {...props}\n    />{text}\n  </div>\n);\n","export const updateObjectInArray = (\n  items,\n  itemId,\n  objPropName,\n  newObgProps\n) => {\n  return items.map((u) => {\n    if (u[objPropName] === itemId) {\n      return { ...u, ...newObgProps };\n    }\n    return u;\n  });\n};\n","import { usersAPI } from \"../api/api\";\nimport { updateObjectInArray } from \"../utils/objectHelpers\";\n\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\n\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: [],\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\n          followed: true,\n        }),\n      };\n\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\n          followed: false,\n        }),\n      };\n\n    case SET_USERS: {\n      return { ...state, users: action.users };\n    }\n\n    case SET_CURRENT_PAGE: {\n      return { ...state, currentPage: action.currentPage };\n    }\n\n    case SET_TOTAL_USERS_COUNT: {\n      return { ...state, totalUsersCount: action.totalUsersCount };\n    }\n\n    case TOGGLE_IS_FETCHING: {\n      return { ...state, isFetching: action.isFetching };\n    }\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\n      return {\n        ...state,\n        followingInProgress: action.isFetching\n          ? [...state.followingInProgress, action.userId]\n          : state.followingInProgress.filter((id) => id != action.userId),\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\nexport const setUsers = (users) => ({ type: SET_USERS, users });\nexport const setCurrentPage = (currentPage) => ({\n  type: SET_CURRENT_PAGE,\n  currentPage,\n});\nexport const setTotalUsersCount = (totalUsersCount) => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalUsersCount,\n});\nexport const toggleIsFetching = (isFetching) => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching,\n});\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId,\n});\n\nexport const requestUsers = (page, pageSize) => {\n  return async (dispatch) => {\n    dispatch(toggleIsFetching(true));\n    dispatch(setCurrentPage(page));\n\n    let data = await usersAPI.getUsers(page, pageSize);\n\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsers(data.items));\n    dispatch(setTotalUsersCount(data.totalCount));\n  };\n};\n\nconst followUnfollowFlow = async (\n  dispatch,\n  userId,\n  apiMethod,\n  actionCreator\n) => {\n  dispatch(toggleIsFollowingProgress(true, userId));\n\n  let response = await apiMethod(userId);\n\n  if (response.data.resultCode == 0) {\n    dispatch(actionCreator(userId));\n  }\n  dispatch(toggleIsFollowingProgress(false, userId));\n};\n\nexport const follow = (userId) => {\n  return async (dispatch) => {\n    let apiMethod = usersAPI.follow.bind(usersAPI);\n\n    followUnfollowFlow(dispatch, userId, apiMethod, followSuccess);\n  };\n};\n\nexport const unfollow = (userId) => {\n  return async (dispatch) => {\n    let apiMethod = usersAPI.unfollow.bind(usersAPI);\n\n    followUnfollowFlow(dispatch, userId, apiMethod, unfollowSuccess);\n  };\n};\n\nexport default usersReducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ArticleButton_button__M6psR\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport classes from \"./Navbar.module.css\";\n\nconst Navbar = () => {\n  return (\n    <nav className={classes.nav}>\n      <div className={classes.item}>\n        <NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink to=\"/dialogs\" activeClassName={classes.active}>Messages</NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink to=\"/users\" activeClassName={classes.active}>Users</NavLink>\n      </div>\n      <div className={classes.item}>News</div>\n      <div className={classes.item}>Music</div>\n      <div className={classes.item}>Settings</div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport classes from \"./paginator.module.css\";\nimport cn from \"classnames\";\n\nlet Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize=10 }) => {\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setportionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber-1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n\n  return (\n    <div className={classes.paginator}>\n      { portionNumber > 1 && \n      <button onClick={() => { setportionNumber(portionNumber - 1)}}> &#9756; </button> }\n\n      {pages\n      .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n      .map((p) => {\n        return (\n          <span\n            className={ cn({[classes.selectedPage] : currentPage === p}, classes.pageNumber)}\n            key={p}\n            onClick={(e) => {\n              onPageChanged(p);\n            }}\n          >\n            {p}\n          </span>\n        );\n      })}\n      { portionCount > portionNumber && \n      <button onClick={() => { setportionNumber(portionNumber + 1)}}> &#9758; </button> }\n    </div>\n  );\n};\n\nexport default Paginator;\n","import React from \"react\";\nimport classes from \"./users.module.css\";\nimport userPhoto from \"../../img/avatar.png\";\nimport { NavLink } from \"react-router-dom\";\n\n\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\n\n  return (\n    \n        <div className={classes.userProfile}>\n          <span>\n            <div >\n              <NavLink to={\"/profile/\" + user.id}>\n                <img\n                  src={user.photos.small != null ? user.photos.small : userPhoto}\n                  className={classes.userPhoto}\n                />\n              </NavLink>\n            </div>\n            <div className={classes.button}>\n              {user.followed ? (\n                <button\n                  disabled={followingInProgress.some((id) => id === user.id)}\n                  onClick={() => {\n                    unfollow(user.id);\n                  }}\n                >\n                  UnFollow\n                </button>\n              ) : (\n                <button\n                  disabled={followingInProgress.some((id) => id === user.id)}\n                  onClick={() => {\n                    follow(user.id);\n                  }}\n                >\n                  Follow\n                </button>\n              )}\n            </div>\n          </span>\n          <span>\n            <span>\n              <div className={classes.userInfo}>{user.name}</div>\n              <div>{user.status}</div>\n            </span>\n            <span>\n              <div className={classes.userInfo}>{\"user.location.country\"}</div>\n              <div className={classes.userInfo}>{\"user.location.city\"}</div>\n            </span>\n          </span>\n        </div> \n  );\n};\n\nexport default User;\n","import React from \"react\";\nimport Paginator from \"../common/Paginator/Paginator.jsx\";\nimport User from \"./User\";\n\nlet Users = ({\n  totalUsersCount,\n  pageSize,\n  currentPage,\n  onPageChanged,\n  users,\n  ...props\n}) => {\n  return (\n    <div>\n      <Paginator\n        totalItemsCount={totalUsersCount}\n        pageSize={pageSize}\n        currentPage={currentPage}\n        onPageChanged={onPageChanged}\n      />\n      <div>\n        {users.map((u) => (\n          <User\n            user={u}\n            followingInProgress={props.followingInProgress}\n            unfollow={props.unfollow}\n            follow={props.follow}\n            key={u.id}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Users;\n","import { createSelector } from \"reselect\";\n\nconst getUsersSelector = (state) => {\n  return state.usersPage.users;\n};\n\nexport const getUsers = createSelector(getUsersSelector, (users) => {\n  return users.filter((u) => true);\n});\n\nexport const getPageSize = (state) => {\n  return state.usersPage.pageSize;\n};\n\nexport const getTotalUsersCount = (state) => {\n  return state.usersPage.totalUsersCount;\n};\n\nexport const getCurrentPage = (state) => {\n  return state.usersPage.currentPage;\n};\n\nexport const getIsFetching = (state) => {\n  return state.usersPage.isFetching;\n};\n\nexport const getFollowingInProgress = (state) => {\n  return state.usersPage.followingInProgress;\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  follow,\n  setCurrentPage,\n  unfollow,\n  toggleIsFollowingProgress,\n  requestUsers,\n} from \"../../redux/usersReducer\";\n\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport { compose } from \"redux\";\nimport {\n  getUsers,\n  getPageSize,\n  getTotalUsersCount,\n  getCurrentPage,\n  getIsFetching,\n  getFollowingInProgress,\n} from \"../../redux/usersSelectors\";\n\nclass UsersContainer extends React.Component {\n  componentDidMount() {\n    let {currentPage, pageSize} = this.props;\n    this.props.requestUsers(currentPage, pageSize);\n  }\n\n  onPageChanged = (pageNumber) => {\n    let {pageSize} = this.props;\n    this.props.requestUsers(pageNumber, pageSize);\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.isFetching ? <Preloader /> : null}\n        <Users\n          totalUsersCount={this.props.totalUsersCount}\n          pageSize={this.props.pageSize}\n          currentPage={this.props.currentPage}\n          onPageChanged={this.onPageChanged}\n          users={this.props.users}\n          follow={this.props.follow}\n          unfollow={this.props.unfollow}\n          followingInProgress={this.props.followingInProgress}\n        />\n      </>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state),\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, {\n    follow,\n    unfollow,\n    setCurrentPage,\n    toggleIsFollowingProgress,\n    requestUsers,\n  })\n)(UsersContainer);\n","import React from \"react\";\nimport classes from \"./Header.module.css\";\nimport headerImg from \"../../img/header.png\";\nimport Nav from \"./Nav/Nav\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Header = ({login, logout, isAuth, ...props}) => {\n  return (\n    <header\n      className={classes.header}\n      styles={{ backgroundImage: `url(${headerImg})` }}\n      \n    >\n      <img src=\"https://toplogos.ru/images/logo-crocs.png\" />\n      {/* <Nav /> */}\n      <div className={classes.loginBlock}>\n        { isAuth \n        ? <div>{login} - <button onClick={logout}>Log out</button></div>\n          : <NavLink to={'/login'}>Login</NavLink>\n        }\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import { authAPI, securityAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\n\nconst SET_USER_DATA = \"tttatttu-network/auth/SET_USER_DATA\";\nconst GET_CAPTCHA_URL_SUCCESS = \"tttatttu-network/auth/GET_CAPTCHA_URL_SUCCESS\";\n\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false,\n  captchaUrl: null //if null, then captcha is not required\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n    case GET_CAPTCHA_URL_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: { userId, email, login, isAuth },\n});\n\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\n  type: GET_CAPTCHA_URL_SUCCESS,\n  payload: {captchaUrl},\n});\n\nexport const getAuthUserData = () => async (dispatch) => {\n  let response = await authAPI.me();\n\n  if (response.data.resultCode === 0) {\n    let { id, email, login } = response.data.data;\n    dispatch(setAuthUserData(id, email, login, true));\n  }\n};\n\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\n  let response = await authAPI.login(email, password, rememberMe, captcha);\n\n  if (response.data.resultCode === 0) {\n    dispatch(getAuthUserData());\n  } else {\n    if (response.data.resultCode === 10) { \n      dispatch(getCaptchaUrl());\n    } \n\n    let message =\n      response.data.messages.length > 0\n        ? response.data.messages[0]\n        : \"Some error\";\n\n    dispatch(stopSubmit(\"login\", { _error: message }));\n  }\n};\n\nexport const getCaptchaUrl = () => async (dispatch) => {\n  const response = await securityAPI.getCaptchaUrl();\n  const captchaUrl = response.data.url;\n\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\n};\n\nexport const logout = () => async (dispatch) => {\n  let response = await authAPI.logout();\n\n  if (response.data.resultCode === 0) {\n    dispatch(setAuthUserData(null, null, null, false));\n  }\n};\n\nexport default authReducer;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport * as axios from \"axios\";\nimport { getAuthUserData, logout } from '../../redux/authReducer';\nimport { connect } from \"react-redux\";\n\nclass HeaderContainer extends React.Component {\n  \n\n  render() {\n    return <Header {...this.props} />\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  login: state.auth.login,\n});\n\nexport default connect(mapStateToProps, {logout}) (HeaderContainer);\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { required } from \"../../utils/validators/validators\";\nimport { createField, Input } from \"../common/FormsControls/FormsControls\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/authReducer\";\nimport { Redirect } from \"react-router-dom\";\nimport classes from \"./../common/FormsControls/FormsControls.module.css\";\n\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\n  // const { handleSubmit } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {createField(\"Email\", \"email\", [required], Input)}\n      {createField(\"Password\", \"password\", [required], Input, {\n        type: \"password\",\n      })}\n      {createField(\n        null,\n        \"rememberMe\",\n        [],\n        Input,\n        { type: \"checkbox\" },\n        \"remember me\"\n      )}\n\n      { captchaUrl && <img src={captchaUrl} />}\n      { captchaUrl && createField(\n        \"Symbols from image\",\n        \"captcha\",\n        [required],\n        Input,\n        { }\n      )}\n\n      {error && <div className={classes.formSummaryError}>{error}</div>}\n      <div>\n        <button>Login</button>\n      </div>\n    </form>\n  );\n};\n\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm);\n\nconst Login = (props) => {\n  const onSubmit = (formData) => {\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n  };\n\n  if (props.isAuth) {\n    return <Redirect to={\"/profile\"} />;\n  }\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  captchaUrl: state.auth.captchaUrl,\n  isAuth: state.auth.isAuth,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import { getAuthUserData } from \"./authReducer\";\n\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\n\nlet initialState = {\n  initialized: false,\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return {\n        ...state,\n        initialized: true,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\n\nexport const initializeApp = () => (dispatch) => {\n  let promise = dispatch(getAuthUserData());\n\n  promise.then(() => {\n    dispatch(initializedSuccess());\n  });\n};\n\nexport default appReducer;\n","let initialState = {};\n\nconst sidebarReducer = (state = initialState, action) => {\n  return state;\n};\n\nexport default sidebarReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport authReducer from './authReducer';\nimport dialogsReducer from './dialogsReducer';\nimport profileReducer from './profileReducer';\nimport sidebarReducer from './sidebarReducer';\nimport usersReducer from './usersReducer';\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form'; \nimport appReducer from './appReducer';\n\nlet reducers = combineReducers({\n  profilePage: profileReducer,\n  dialogsPage: dialogsReducer,\n  sidebar: sidebarReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  form: formReducer,\n  app: appReducer\n})\n\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n\nexport default store;","import React, { Suspense } from \"react\";\nimport Preloader from \"../components/common/Preloader/Preloader\";\n\nexport const withSuspense = (Component) => {\n  return (props) => {\n    return (\n      <Suspense fallback={<Preloader />}>\n        <Component {...props} />\n      </Suspense>\n    );\n  };\n};\n","import React, { Component, Suspense } from \"react\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { HashRouter, Route, withRouter } from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { initializeApp } from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport \"./App.css\";\nimport store from \"./redux/redux-store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { withSuspense } from \"./hoc/withSuspense\";\nimport Articles from \"./components/Profile/Articles/Articles\";\n\nconst DialogsContainer = React.lazy(() =>\n  import(\"./components/Dialogs/DialogsContainer\")\n);\nconst ProfileContainer = React.lazy(() =>\n  import(\"./components/Profile/ProfileContainer\")\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />;\n    }\n\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Navbar />\n\n        <div className=\"app-wrapper-content\">\n          <Route\n            path=\"/dialogs\"\n            render={withSuspense(DialogsContainer)}/>\n          <Route\n            path=\"/profile/:userId?\"\n            render={withSuspense(ProfileContainer)}/>\n          <Route path=\"/users\" render={() => <UsersContainer />} />\n          <Route path=\"/login\" render={() => <LoginPage />} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized,\n});\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App);\n\nconst MainApp = () => {\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </HashRouter>\n  );\n};\n\nexport default MainApp;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport MainApp from './App';\n\n  ReactDOM.render(\n        <MainApp />,\n    document.getElementById('root')\n  );\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userProfile\":\"users_userProfile__29TcX\",\"userPhoto\":\"users_userPhoto__1_En6\",\"button\":\"users_button__2y6Lc\",\"userInfo\":\"users_userInfo__36dY-\",\"selectidPage\":\"users_selectidPage___b3f3\"};","import React from \"react\";\nimport preloader from \"../../../img/loader.gif\";\n\nlet Preloader = (props) => {\n    return <img src={preloader} />\n}\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blok\":\"Article_blok__mwCFO\",\"title\":\"Article_title__2mLtl\",\"text\":\"Article_text__3T9L7\",\"img\":\"Article_img__1sNDI\",\"footer\":\"Article_footer__1ra03\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummaryError\":\"FormsControls_formSummaryError__1F2-S\"};","export const required = value => {\n    if (value) return undefined;\n\n    return 'Field is required';\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"paginator_paginator__bYHBV\",\"pageNumber\":\"paginator_pageNumber__guCgF\",\"selectedPage\":\"paginator_selectedPage__Qa29V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Articles_container__215vz\",\"header\":\"Articles_header__Mhnbp\",\"blok\":\"Articles_blok__37KWP\"};","import { profileAPI, usersAPI } from \"../api/api\";\nimport { stopSubmit } from 'redux-form';\n\nconst ADD_POST = \"ADD-POST\";\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nconst SET_STATUS = \"SET_STATUS\";\nconst DELETE_POST = \"DELETE_POST\";\nconst SAVE_PHOTO_SUCCESS = \"SAVE_PHOTO_SUCCESS\";\n\nlet initialState = {\n  posts: [\n    { id: 1, message: \"Yo\", likesCount: 12 },\n    { id: 2, message: \"Privet\", likesCount: 5 },\n    { id: 3, message: \"How are you?\", likesCount: 19 },\n    { id: 4, message: \"It's my first post\", likesCount: 27 },\n  ],\n  profile: null,\n  status: \"\",\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST: {\n      let newPost = {\n        id: 5,\n        message: action.newPostText,\n        likesCount: 0,\n      };\n      return {\n        ...state,\n        posts: [...state.posts, newPost],\n        newPostText: \"\",\n      };\n    }\n    case SET_USER_PROFILE: {\n      return { ...state, profile: action.profile };\n    }\n    case SET_STATUS: {\n      return {\n        ...state,\n        status: action.status,\n      };\n    }\n    case DELETE_POST: {\n      return {\n        ...state,\n        posts: state.posts.filter((p) => p.id != action.postId),\n      };\n    }\n    case SAVE_PHOTO_SUCCESS: {\n      return {\n        ...state,\n        profile: {...state.profile, photos: action.photos}\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = (newPostText) => ({\n  type: ADD_POST,\n  newPostText,\n});\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId });\nexport const savePhotoSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos });\n\nexport const setUserProfile = (profile) => ({\n  type: SET_USER_PROFILE,\n  profile,\n});\n\nexport const setStatus = (status) => ({\n  type: SET_STATUS,\n  status,\n});\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n  let response = await usersAPI.getProfile(userId);\n\n  dispatch(setUserProfile(response.data));\n};\n\nexport const getStatus = (userId) => async (dispatch) => {\n  let response = await profileAPI.getStatus(userId);\n\n  dispatch(setStatus(response.data));\n};\n\nexport const updateStatus = (status) => async (dispatch) => {\n  let response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\n\nexport const savePhoto = (file) => async (dispatch) => {\n  let response = await profileAPI.savePhoto(file);\n\n  if (response.data.resultCode === 0) {\n    dispatch(savePhotoSuccess(response.data.data.photos));\n  }\n};\n\nexport const saveProfile = (profile) => async (dispatch, getState) => {\n\n  const userId = getState().auth.userId;\n  const response = await profileAPI.saveProfile(profile);\n\n  if (response.data.resultCode === 0) {\n    dispatch(getUserProfile(userId));\n  } else {\n    dispatch(stopSubmit(\"editProfile\", {_error: response.data.messages[0]}));\n    return Promise.reject(response.data.messages[0]);\n  }\n};\n\nexport default profileReducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"nav\":\"Header_nav__3yRlw\",\"loginBlock\":\"Header_loginBlock__6mma5\"};"],"sourceRoot":""}