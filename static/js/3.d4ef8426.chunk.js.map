{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","message","likesCount","maxLength10","maxLengthCreator","AddElementFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","className","classes","formPost","button","MyPosts","React","memo","postsElements","posts","map","post","key","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileDataReduxForm","profile","error","style","formSummaryError","createField","Input","type","Object","keys","contacts","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","photos","src","large","avatar","target","files","length","initialValues","formData","then","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.d4ef8426.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"photos\":\"ProfileInfo_photos__3pTaC\",\"contact\":\"ProfileInfo_contact__1N3gp\",\"formSummaryError\":\"ProfileInfo_formSummaryError__3Pphw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\",\"content\":\"Profile_content__2wLDD\",\"item\":\"Profile_item__Kyaaw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formPost\":\"MyPosts_formPost__3MaxQ\",\"button\":\"MyPosts_button__2WbpQ\"};","import React from \"react\";\nimport classes from \"./Post.module.css\";\n\nconst Post = (props) => {\n  \n\n  return (\n    <div>\n      <div>{props.message}</div>\n      <div>{props.likesCount}</div>\n     \n      \n      \n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport Post from \"./Post/Post\";\nimport classes from \"./MyPosts.module.css\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  maxLengthCreator,\n  required,\n} from \"../../../utils/validators/validators\";\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\n\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div >\n        <Field\n          component={Textarea}\n          name=\"newPostText\"\n          placeholder={\"Post message\"}\n          validate={[required, maxLength10]}\n          className={classes.formPost}\n        />\n      </div>\n      <div>\n        <button className={classes.button}>Add post</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddElementFormRedux = reduxForm({ form: \"profileAddElementForm\" })(\n  AddNewPostForm\n);\nconst MyPosts = React.memo(props => {\n  \n    let postsElements = props.posts.map((post) => (\n      <Post message={post.message} likesCount={post.likesCount} key={post.id} />\n    ));\n\n    let onAddPost = (values) => {\n      props.addPost(values.newPostText);\n    };\n\n    return (\n      <div className={classes.postsBlock}>\n        <h3>My Posts</h3>\n        <AddElementFormRedux onSubmit={onAddPost} />\n        <div className={classes.posts}>{postsElements}</div>\n      </div>\n    );\n  \n})\n\nexport default MyPosts;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  addPostActionCreator,\n} from \"../../../redux/profileReducer\";\n\nimport MyPosts from \"./MyPosts\";\n\n\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText))\n    }\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import React, { useEffect, useState } from \"react\";\nimport classes from \"./ProfileInfo.module.css\";\nimport Preloader from \"../../common/Preloader/Preloader\";\n\nconst ProfileStatusWithHooks = (props) => {\n\nlet [editMode, setEditMode] = useState(false);\nlet [status, setStatus] = useState(props.status);\n\nuseEffect(() => {\n  setStatus(props.status)\n}, [props.status]);\n\nconst activateEditMode = () => {\n  setEditMode(true)\n}\n\nconst deactivateEditMode = () => {\n  setEditMode(false);\n  props.updateStatus(status)\n}\n\nconst onStatusChange = (e) => {\n  setStatus(e.currentTarget.value)\n}\n\n  return (\n    <div>\n      { !editMode && (\n        <div>\n          <b>Status</b>: <span onDoubleClick={ activateEditMode }>{props.status || '-------'}</span>\n        </div>\n      )}\n      { editMode && (\n        <div>\n          <input \n            onChange={onStatusChange}\n            onBlur={ deactivateEditMode }\n            autoFocus={true}\n            value={status}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls';\nimport { reduxForm } from 'redux-form';\nimport classes from \"./ProfileInfo.module.css\";\nimport style from \"../../common/FormsControls/FormsControls.module.css\"\n\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\n  return (\n    <form onSubmit={handleSubmit}> \n     \n        <div>\n          <button>save</button>\n        </div>\n\n      {error && <div className={style.formSummaryError}>{error}</div>}\n      \n      <div>\n        <b>Full name</b>: {createField('Full name', 'fullName', [], Input )}\n      </div>\n      <div>\n        <b>Looking for a job</b>: {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'} )}\n      </div>\n      \n        <div>\n          <b>My professional skills</b>: {createField('My professional skills', 'lookingForAJobDescription', [], Textarea )}\n        </div>\n      \n      <div>\n        <b>About me</b>: {createField('About me', 'aboutMe', [], Textarea )}\n      </div>\n      <div>\n        <b>Contacts</b>:\n        {Object.keys(profile.contacts).map((key) => {\n          return <div className={classes.contact} key={key} >\n            <b>{key}</b>: {createField(key, 'contacts.' + key, [], Input )}\n          </div>\n        })}\n      </div>\n    </form>\n  );\n};\n\nconst ProfileDataReduxForm = reduxForm({ form: \"editProfile\" })(ProfileDataForm);\nexport default ProfileDataReduxForm;\n","import React, { useState } from \"react\";\nimport classes from \"./ProfileInfo.module.css\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport avatar from \"./../../../img/avatar.png\";\nimport ProfileDataForm from \"./ProfileDataForm\";\n\nconst ProfileInfo = ({\n  profile,\n  status,\n  updateStatus,\n  isOwner,\n  savePhoto,\n  saveProfile,\n}) => {\n  let [editMode, setEditMode] = useState(false);\n\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  const onMainPhotoSelected = (e) => {\n    if (e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  };\n\n  const onSubmit = (formData) => {\n    saveProfile(formData).then(() => {\n      setEditMode(false);\n    });\n  };\n\n  return (\n    <div>\n      <div>\n        <div className={classes.descriptionBlock}>\n          <img\n            className={classes.photos}\n            src={profile.photos.large || avatar}\n          />\n          {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\n          <div>{profile.aboutMe}</div>\n\n          {editMode ? (\n            <ProfileDataForm\n              initialValues={profile}\n              profile={profile}\n              onSubmit={onSubmit}\n            />\n          ) : (\n            <ProfileData\n              goToEditMode={() => {\n                setEditMode(true);\n              }}\n              profile={profile}\n              isOwner={isOwner}\n            />\n          )}\n\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\n  return (\n    <div>\n      {isOwner && (\n        <div>\n          <button onClick={goToEditMode}>edit</button>\n        </div>\n      )}\n      <div>\n        <b>Full name</b>: {profile.fullName}\n      </div>\n      <div>\n        <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\n      </div>\n      {profile.lookingForAJob && (\n        <div>\n          <b>My professional skills</b>:{profile.lookingForAJobDescription}\n        </div>\n      )}\n      <div>\n        <b>About me</b>: {profile.aboutMe}\n      </div>\n      <div>\n        <b>Contacts</b>:{\" \"}\n        {Object.keys(profile.contacts).map((key) => {\n          return (\n            <Contact\n              key={key}\n              contactTitle={key}\n              contactValue={profile.contacts[key]}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst Contact = ({ contactTitle, contactValue }) => {\n  return (\n    <div className={classes.contact}>\n      <b>{contactTitle}</b>: {contactValue}\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport Articles from \"./Articles/Articles\";\nimport classes from \"./Profile.module.css\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport ProfileContainer from \"./ProfileContainer\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nconst Profile = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\n  return (\n    <div className={classes.profile}>\n      {/* <Articles /> */}\n      {/* <div className={classes.post}>w</div>\n      <div>\n        <div className={classes.item}>w</div>\n      </div> */}\n      {/* <ProfileContainer /> */}\n      <ProfileInfo\n        profile={profile}\n        status={status}\n        updateStatus={updateStatus}\n        isOwner={isOwner}\n        savePhoto={savePhoto}\n        saveProfile={saveProfile}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import * as axios from \"axios\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Profile from \"./Profile\";\nimport {\n  getUserProfile,\n  getStatus,\n  updateStatus,\n  savePhoto,\n  saveProfile\n} from \"../../redux/profileReducer\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    \n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(this.props.match.params.userId != prevProps.match.params.userId)\n    this.refreshProfile();\n  }\n\n  render() {\n    return (\n      <div>\n        <Profile\n          {...this.props}\n          profile={this.props.profile}\n          status={this.props.status}\n          updateStatus={this.props.updateStatus}\n          isOwner={!this.props.match.params.userId}\n          savePhoto={this.props.savePhoto}\n        />\n      </div>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  // console.log('mapStateToProps PROFILE')\n  return ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n  })\n  \n};\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\n  withRouter\n  // withAuthRedirect\n)(ProfileContainer);\n"],"sourceRoot":""}